<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MultiPlayerNIIES"
                    xmlns:converters="clr-namespace:MultiPlayerNIIES.View.ValueConverters">


    <converters:SyncShiftSliderValueToMargin_MultiConverter x:Key="SyncShiftSliderValueToMargin_MultiConverter"/>

    <Color x:Key="MyOrangeColor" A="255" R="176" G="114" B="32" />
    <Color x:Key="MyLightOrangeColor" A="255" R="205" G="151" B="71" />
    <Color x:Key="MyHiLightOrangeColor" A="218" R="205" G="151" B="71" />
    <Color x:Key="MyDarkOrangeColor" A="255" R="128" G="88" B="35" />
    <Color x:Key="VideoPlayerUpYellowColor" A="255" R="248" G="210" B="159"/>
    <Color x:Key="VideoPlayerBottomYellowColor" A="255" R="212" G="163" B="98"/>
    <Color x:Key="AlmostWhiteColor" A="255" R="255" G="235" B="157"/>
    <Color x:Key="MyVeryLightOrangeColor" A="255" R="255" G="189" B="89" />
    <Color x:Key="AlmostBlackColor" A="255" R="27" G="27" B="27"/>

    <SolidColorBrush x:Key="YellowGlassesBrush" Color="#7FB4AF17"/>
    <SolidColorBrush x:Key="AlmostBlackBrush" Color="{StaticResource AlmostBlackColor}"/>
    <SolidColorBrush x:Key="BlackBrush" Color="#FF070707"/>
    <SolidColorBrush x:Key="NiceGrayBrush" Color="#FF323232"/>
    <SolidColorBrush x:Key="LightGrayBrush" Color="#FFB4B4B4"/>
    <SolidColorBrush x:Key="SmartGrayBrush" Color="#FF3F3F3F"/>

    <SolidColorBrush x:Key="MyOrangeBrush" Color="{StaticResource MyOrangeColor}"/>
    <SolidColorBrush x:Key="MyLightOrangeBrush" Color="{StaticResource MyLightOrangeColor}"/>
    <SolidColorBrush x:Key="MyHiLightOrangeBrush" Color="{StaticResource MyHiLightOrangeColor}"/>
    <SolidColorBrush x:Key="MyDarkOrangeBrush" Color="{StaticResource MyDarkOrangeColor}"/>
    <SolidColorBrush x:Key="VideoPlayerTopYellowBrush" Color="{StaticResource VideoPlayerUpYellowColor}"/>
    <SolidColorBrush x:Key="VideoPlayerBottomYellowBrush" Color="{StaticResource VideoPlayerBottomYellowColor}"/>
    <SolidColorBrush x:Key="AlmostWhiteBrush" Color="{StaticResource AlmostWhiteColor}"/>

    <LinearGradientBrush x:Key="OrangeGradientBrush"  EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource MyOrangeColor}" Offset="0"/>
        <GradientStop Color="{StaticResource MyDarkOrangeColor}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HiLightOrangeGradientBrush" EndPoint="0.5,0" StartPoint="0.5,0.6">
        <GradientStop Color="{StaticResource MyHiLightOrangeColor}" Offset="0"/>
        <GradientStop Color="{StaticResource MyLightOrangeColor}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LightOrangeGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource MyLightOrangeColor}" Offset="0"/>
        <GradientStop Color="{StaticResource MyOrangeColor}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VeryLightOrangeGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource MyVeryLightOrangeColor}" Offset="0"/>
        <GradientStop Color="{StaticResource MyLightOrangeColor}" Offset="1"/>
    </LinearGradientBrush>
    



    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="OrangeTextBoxStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource MyOrangeBrush}"/>
    </Style>

    <Style x:Key="OrangeOnGrayTextBoxStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource AlmostBlackBrush}"/>
        <Setter Property="Background" Value="{StaticResource LightGrayBrush}"/>
    </Style>
    
    <Style x:Key="OrangeTextBoxContrastOnGrayStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource MyHiLightOrangeBrush}"/>
        <Setter Property="Background" Value="{StaticResource SmartGrayBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MyOrangeBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>



    <Style x:Key="OrangeTextBlockContrastStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource NiceGrayBrush }"/>
        <Setter Property="Background" Value="{StaticResource MyLightOrangeBrush}"/>
    </Style>

    <Style x:Key="OrangeTextBlockContrastOnGrayStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource MyHiLightOrangeBrush}"/>
        <Setter Property="Background" Value="{StaticResource SmartGrayBrush}"/>
    </Style>

    <Style x:Key="OrangeTextStyle">
        <Setter Property="Control.Background" Value="{StaticResource LightGrayBrush}" />
        <Setter Property="Control.Foreground" Value="{StaticResource MyOrangeBrush}" />
        <Setter Property="Control.Margin" Value="5" />
    </Style>

    
    
    <Style x:Key="OrangeGroupBoxStyleOld" TargetType="GroupBox">
        <Setter Property="Foreground" Value="{StaticResource MyOrangeBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MyOrangeBrush}"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="Border" x:Key="OrangeBorderStyle">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource MyOrangeBrush}"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="ListBox" x:Key="OrangeListBoxStyle">
        <Setter Property="BorderBrush" Value="{StaticResource MyOrangeBrush}"/>
    </Style>
    <Style TargetType="ListBoxItem" x:Key="OrangeListBoxItemStyle">
        <Setter Property="Background" Value="#FF323232" />
        <Setter Property="Foreground" Value="#FFB07220" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border"
                    BorderThickness="0"
                    SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FF3F3F3F" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox" x:Key="OrangeCheckBoxStyle">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource AlmostBlackBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource HiLightOrangeGradientBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource MyDarkOrangeBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OrangeCheckBoxFullStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource AlmostBlackBrush}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MyDarkOrangeBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border x:Name="CheckMark" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Path x:Name="CheckMarkPath" Data="M 0 4.0 L 0 9.6 L 5 14.8 L 14.2 5.6 L 14.2 0 L 5 9.2 Z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Stretch="Fill" Height="15"  Width="15"/>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Visibility" TargetName="CheckMarkPath" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="CheckMark" Value="{StaticResource MyLightOrangeBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="OrangeGroupBoxStyle" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{StaticResource MyOrangeBrush}"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{StaticResource MyOrangeBrush}" BorderThickness="2" Grid.ColumnSpan="4" CornerRadius="1" Grid.Row="1" Grid.RowSpan="3">
                            <Border.OpacityMask>
                                <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                    <Binding ElementName="Header" Path="ActualWidth"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                        <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="OrangeTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource MyOrangeBrush}"/>
    </Style>
    <Style x:Key="OrangeLabelStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource MyOrangeBrush}"/>
    </Style>

    <Style x:Key="OrangeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>

        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,0,1,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{x:Null}" >
                        <Rectangle x:Name="rectangle" Stroke="Gray" StrokeThickness="1.5" RadiusX="3" RadiusY="3" Fill="{StaticResource LightOrangeGradientBrush}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource OrangeGradientBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#FFECA241"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="OrangeWindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>

        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{x:Null}" >
                        <Rectangle x:Name="rectangle" StrokeThickness="1" Stroke="{x:Null}" />

                        <ContentPresenter x:Name="contentBtn" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" >
                                <Setter.Value>
                                    <SolidColorBrush Color="#7F6A6A6A"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" >
                                <Setter.Value>
                                    <SolidColorBrush Color="#7FB4AF17"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="OrangeSmallButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{x:Null}" >
                        <Rectangle x:Name="rectangle" Stroke="#FF3F3F3F" StrokeThickness="1" RadiusX="1" RadiusY="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFCD974F" Offset="0"/>
                                    <GradientStop Color="#FFB07720" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFB07220" Offset="0"/>
                                        <GradientStop Color="#FF805823" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">

                            <Setter Property="Stroke" TargetName="rectangle" Value="#FFECA241"/>


                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OrangeExtraSmallButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{x:Null}" >
                        <Rectangle x:Name="rectangle" Stroke="#FF212121" StrokeThickness="1" RadiusX="1" RadiusY="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFCD974F" Offset="0"/>
                                    <GradientStop Color="#FFB07720" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFB07220" Offset="0"/>
                                        <GradientStop Color="#FF805823" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">

                            <Setter Property="Stroke" TargetName="rectangle" Value="#FFECA241"/>


                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="OrangeVideoPlayerButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{x:Null}" >
                        <Rectangle x:Name="rectangle" Stroke="{x:Null}" />

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource NiceGrayBrush}">
                             </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">

                            <Setter Property="Stroke" TargetName="rectangle" Value="#FFECA241"/>


                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--ДРУГОЙ СЛАЙДЕР!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!-->



    <!--#region NEW ORANGE SLIDER-->


    <Style x:Key="SliderOrangeRepeatButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border  BorderThickness="1"  Background="{StaticResource NiceGrayBrush}" Height="8" Margin="-11 0 1 0"
                             CornerRadius="1"
                                 BorderBrush="{StaticResource MyOrangeBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderOrangeRepeatButton1" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border SnapsToDevicePixels="True"  BorderThickness="1" 
                                Height="8" Margin="1 0 -10 0" 
                                CornerRadius="1"
                                Background="{StaticResource OrangeGradientBrush}" 
                                BorderBrush="{StaticResource MyOrangeBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderOrangeRepeatButton2" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border SnapsToDevicePixels="True"  BorderThickness="1" 
                                Height="8" Margin="1 0 -10 0" 
                                CornerRadius="1"
                                Background="{StaticResource NiceGrayBrush}" 
                                BorderBrush="{StaticResource MyOrangeBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderOrangeThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid >
                        <Ellipse x:Name="Ellipse"  Height="18" Width="18" Margin="0 0 0 0" Fill="{StaticResource MyOrangeBrush}" Stroke="{StaticResource MyLightOrangeBrush}" >

                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource MyDarkOrangeBrush}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>

    <ControlTemplate x:Key="SliderOrange"  TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Track Grid.Row="1" x:Name="PART_Track"   >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderOrangeRepeatButton1}"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderOrangeRepeatButton}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderOrangeThumb}"  />
                </Track.Thumb>

            </Track>
        </Grid>
    </ControlTemplate>

    <Style x:Key="Horizontal_SliderOrange" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">

                <Setter Property="Template" Value="{StaticResource SliderOrange}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->


    <!--#region Slider with indication of shift-->




    <Style x:Key="SliderOrangeRepeatButtonTransparent" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border SnapsToDevicePixels="True"  BorderThickness="1" 
                                Height="8" Margin="1 0 1 0" 
                                CornerRadius="1"
                                Background="Red" 
                                BorderBrush="{StaticResource MyOrangeBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderOrangeRepeatButtonFull" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border SnapsToDevicePixels="True"  BorderThickness="1" 
                                Height="8" Margin="1 0 1 0" 
                                CornerRadius="1"
                                Background="{StaticResource NiceGrayBrush}" 
                                BorderBrush="{StaticResource MyOrangeBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SliderShiftOrange"  TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <RepeatButton Grid.Row="1" Style="{StaticResource SliderOrangeRepeatButtonFull}"></RepeatButton>
            <Rectangle Grid.Row="1" Height="8" Fill="{StaticResource OrangeGradientBrush}" >
                <Rectangle.Margin>

                    <MultiBinding Converter="{StaticResource SyncShiftSliderValueToMargin_MultiConverter}">
                        <MultiBinding.Bindings>
                            <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                        </MultiBinding.Bindings>
                    </MultiBinding>

                </Rectangle.Margin>
            </Rectangle>

            <Track Grid.Row="1" x:Name="PART_Track" >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderOrangeRepeatButtonTransparent}" Opacity="0" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderOrangeRepeatButtonTransparent}"  Opacity="0" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderOrangeThumb}"  />
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>
    <Style x:Key="Horizontal_SliderShiftOrange" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource SliderShiftOrange}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region MenuItemHiLevel-->
    <ControlTemplate x:Key="OrangeMenuItemControlTemplate" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" 
                                  ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Popup x:Name="PART_Popup"
                           AllowsTransparency="True" 
                           Focusable="False" 
                           IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                           Placement="Bottom">

                    <ScrollViewer x:Name="SubMenuScrollViewer" 
                                  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <Grid RenderOptions.ClearTypeHint="Enabled" Background="{DynamicResource VeryLightOrangeGradientBrush}">
                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" 
                                           Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
                                           Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" 
                                            Grid.IsSharedSizeScope="True" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                            KeyboardNavigation.TabNavigation="Cycle"/>
                        </Grid>
                    </ScrollViewer>

                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>





    <SolidColorBrush x:Key="Menu.Static.Separator" Color="{StaticResource MyDarkOrangeColor}"/>
    <Style x:Key="OrangeSeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{StaticResource Menu.Static.Separator}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Separator}"/>
        <Setter Property="MinHeight" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="5,0,5,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#endregion-->
</ResourceDictionary>